// This file was generated from a template. Edit it to match your keyboard.
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Define constants for layer names for readability (optional but good practice)

#define BASE 0
#define FUNC 1 // Function layer for BT controls, etc.

&lt { require-prior-idle-ms = <150>; };

/ {
    behaviors {
        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 18 19 7 8 9 10 11 20 21 22 23 32 33 34 35 6 7 18 19 20 30 31 32 36 37 38 39 40 41>;
            require-prior-idle-ms = <150>;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        parenthesis-l {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        brace-l {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <4 5>;
        };

        brackets-l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 29>;
        };

        brace-r {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 7>;
        };

        parenthesis-r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        bracket_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <7 8>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <31 32>;
        };

        left {
            bindings = <&kp LEFT>;
            key-positions = <19 20>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <20 21>;
        };
    };

    macros {
        lang: lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(SPACE)>;
            label = "LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base Layer (Layer 0) - Your primary typing layer

        default_layer {
            bindings = <
&kp ESC    &HML NUMBER_1 Q      &HML NUMBER_2 W  &HML NUMBER_3 E  &HML NUMBER_4 R    &HML N5 T       &HMR N5 Y     &HMR N6 U             &HMR N7 I         &HMR N8 O         &HMR N9 P                     &HMR N0 LEFT_BRACKET
&kp TAB    &HML LEFT_CONTROL A  &HML LEFT_ALT S  &HML LEFT_GUI D  &HML LEFT_SHIFT F  &HML MINUS G    &HMR UNDER H  &HMR RIGHT_SHIFT J    &HMR RIGHT_GUI K  &HMR RIGHT_ALT L  &HMR RIGHT_CONTROL SEMICOLON  &kp SQT
&kp ENTER  &kp Z                &kp X            &kp C            &kp V              &kp B           &kp N         &HMR RIGHT_BRACKET M  &kp COMMA         &kp PERIOD        &kp FSLH                      &kp SPACE
                                                 &mo 3            &lt 2 BACKSPACE    &lt 1 SPACE     &lt 1 ENTER   &mo 1                 &lang
            >;
        };

        // Function Layer (Layer 1) - Accessed by holding the MO(FUNC) key
        // BT controls primarily on the left half's second row for easier access

        layer_1 {
            display-name = "Function Layer"; // Optional label for display module
            bindings = <
&kp TILDE  &kp EXCL     &kp AT     &kp HASH       &kp DOLLAR  &kp EQUAL    &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans      &kp DEL
&kp GRAVE  &kp PERCENT  &kp CARET  &kp AMPS       &kp PLUS    &kp MINUS    &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans      &kp PRINTSCREEN
&kp CAPS   &trans       &kp PIPE   &kp BACKSLASH  &kp SLASH   &kp ASTRK    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans
                                   &trans         &trans      &trans       &trans        &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&trans     &trans     &trans          &mmv MOVE_UP    &trans           &msc SCRL_UP      &trans  &trans  &trans  &trans  &trans  &trans
&mkp RCLK  &mkp LCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans          &trans          &trans           &trans            &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans          &trans           &trans            &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&sys_reset      &trans        &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_PRV  &bt BT_NXT  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans      &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
